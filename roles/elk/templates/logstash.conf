input {
  beats {
    port => 5044
  }
}

filter {

    if [kubernetes][labels][logType] == "json" {
      json {
        source => "message"
      }
      if [name] == "@instana/collector" {
        drop { }
      }
  }

  if [kubernetes][labels][logType] == "raw" {
    if [kubernetes][labels][appType] == "nginx" {
      grok {
        match => { "message" => "%{IP:lb_ip}%{SPACE}-%{SPACE}-%{SPACE}\[%{HTTPDATE:time}\]%{SPACE}\"%{WORD:http_method}%{SPACE}%{UNIXPATH:http_path}%{SPACE}%{WORD}/%{NUMBER}\"%{SPACE}%{NUMBER:response_code}%{SPACE}%{QUOTEDSTRING:url}%{SPACE}%{QUOTEDSTRING:client}%{SPACE}%{QUOTEDSTRING:source_ip}" }
      }
        mutate {
          remove_field => [ "client" ]
        }
    }

    if [kubernetes][labels][appType] == "java" {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{WORD:level}%{SPACE}%{NUMBER}%{SPACE}---%{SPACE}\[%{SPACE}(%{WORD:thread_name}|%{WORD:thread_name}-1)\]%{SPACE}%{GREEDYDATA:msg}"}
      }

      if ![timestamp] {
          # Append the current message to the previous line's log_message
          mutate {
            update => { "log_message" => "%{[msg]} %{[message]}" }
          }
          # Remove the original message field to avoid duplication
          mutate {
            remove_field => ["message"]
          }
        }

    }

  }
}

output {
    elasticsearch {
        hosts => ["https://localhost:9200"]
        index => "%{[kubernetes][container][name]}-%{+yyyy-MM-dd}"
        ssl_verification_mode => "none"
	      user => "elastic"
        password => "{{secrets.password}}"
    }
}
